script.
  // REACT FUNCTIONALITY
  var currentReact = '#{currentReact}'

  var upload = '#{upload._id}'
  var csrf = '#{_csrf}'

  $('.react img').on('release click', function (e) {

    // dont move browser
    e.preventDefault();

    if(!user){
      return swal({
        text: "Please register to react to content",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Sign Up Now'
      }).then(function (result) {
        if (result.value) {
          window.location.href = "/signup";
        }
      })
    }


    // make all emojis dark
    $('.react img').css({
      opacity: '0.4'
    })

    // make the clicked emoji bright
    $(this).css({
      opacity: 0.85
    })

    // note active emoji
    var oldEmoji = currentReact

    // clicked emoji
    var clickedEmoji = $(this).attr('id')

    currentReact = clickedEmoji;

    // the old react is the same as the new (user wants to remove react)
    var unreactEmoji = (oldEmoji == currentReact)

    // decrement old emoji if the content has already been reacted to
    if(oldEmoji){

      //      var divs = $('p.' + oldEmoji);
      //
      //      console.log(divs);
      //
      //      var div = $('p.' + currentReact).filter("[class~='desktopThing']").text()
      //
      //      console.log(div);

      var oldEmojiValue = $('p.' + oldEmoji).filter("[class~='desktopThing']").text()
      console.log(oldEmojiValue)

      console.log('running!');

      var decrementedValue = parseInt(oldEmojiValue) - 1

      // update emoji value
      var updateEmoji = $('p.' + oldEmoji).filter("[class~='desktopThing']").text(decrementedValue)

    }




    // if the user removed the react, there is no active emoji
    if(unreactEmoji) {
      currentReact = null
      $(".react img").css({ // reset all reacts opacity
        opacity: 0.85
      })

      // if user chose a different react, update the new react value
    } else {

      console.log('running!!!');

      console.log(clickedEmoji);

      var divs = $('p.' + clickedEmoji)

      console.log(divs);

      var div  = $('p.' + clickedEmoji).filter("[class~='desktopThing']")

      console.log(div);

      var newEmojiValue = $('p.' + clickedEmoji).filter("[class~='desktopThing']").text()
      console.log('about to increment the value ' + newEmojiValue )


      var incrementedValue = parseInt(newEmojiValue) + 1
      console.log(newEmojiValue)


      var updatedEmojiValue = $('p.' + clickedEmoji).filter("[class~='desktopThing']").text(incrementedValue)
    }

    var data = {
      _csrf : csrf,
      clickedEmoji
    }

    $.ajax({
      type: 'POST',
      url: `/api/react/${upload}/${user}`,
      data,
      success: function (data) {
        console.log(data);
      },
      error: function (err) {
        console.log(err);
      }
    });


    // app.post('/api/react/:upload/:user', internalApiController.react);


  })