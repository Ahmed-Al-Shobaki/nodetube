extends ../layout

block content
    style.
        .dropdown {
            text-align: center;
        }

        .button, .dropdown-menu {
            margin: 10px auto
        }

        .dropdown-menu {
            width: 200px;
            left: 50%;
            margin-left: -100px;
        }

        input[type=checkbox] {
            /* Double-sized Checkboxes */
            -ms-transform: scale(2); /* IE */
            -moz-transform: scale(2); /* FF */
            -webkit-transform: scale(2); /* Safari and Chrome */
            -o-transform: scale(2); /* Opera */
            padding: 10px;
        }

        .ldBar-label {
            font-size: 2.1em;
            font-weight: 300;
        }

        .ldBar {
            margin: 0 auto;
        }

        .upload-information p, .formats p {
            font-weight:300;
            font-size:17px;
        }

        .u
    br
    div.center-block.text-center
        div.upload-information(style="margin-top:20px")
            h1(style="display:inline")
                i.fa.fa-upload(style="display:inline")
            h1.fw(style="display:inline") File Importer

            br
            h3.fw #{brandName} supports importing from over 110 sites
            br
            br
            div.formats(style="max-width:500px;margin:0 auto;")
                p(style="font-size:20px;margin-bottom:16px;") You can click here for an entire list


            p(style="font-size:18px;margin-bottom: 10px;") You can currently use this because you have Plus


        .row
            .col-sm-12

                div
                    label.fw(style="font-size: 23px;" for='title') Url To Import
                    input.form-group.center-block.text-center(style="width:400px;max-width:95%;border-radius:2px;font-size:20px;font-weight:300;" type="text" name="title" id="title" minlength=3, maxlength=100 required)
                    button.fw.btn.btn-primary.submit-button(style="border-radius:5px;font-size:18px;" type="submit") Import





                div.upload-form

                    .upload-form
                        .form-group.center-block.text-center


                            div(id="scrollTo")

                            h3.fw(style="font-size:30px;margin-bottom:15px;" id="uploadDetails") Upload Details

                            label.fw(style="font-size: 23px;" for='title') Title (*)
                            input.form-group.center-block.text-center(style="width:400px;max-width:95%;border-radius:2px;font-size:20px;font-weight:300;" type="text" name="title" id="title" minlength=3, maxlength=100 required)
                            br

                            // add endpoint for visibility
                            if user.plan == 'plus'
                                label.fw(for='title' style="font-size:20px") Visibility
                                br
                                div.radio-buttons.visibility
                                    label.fw.radio-inline(style="font-size:15px;")
                                        input.radio-button(type='radio', name='visibility' value="public" checked)
                                        | Public
                                    label.fw.radio-inline(style="font-size:15px;")
                                        input.radio-button(type='radio', name='visibility' value="unlisted")
                                        | Unlisted
                                    label.fw.radio-inline(style="font-size:15px;")
                                        input.radio-button(type='radio', name='visibility' value="private")
                                        | Private
                                br
                                br

                            label.fw(for='title' style="font-size:20px") Select A Category
                            br





                            // RATINGS
                            // todo: actually add site rating as passed variable
                            if site_rating || 1 == 1
                                label.fw(for='rating' style="font-size:24px;margin-top:26px;margin-bottom:15px;") Rating (*)
                                br
                                div.radio-buttons.rating(style="")
                                    if user.privs.safeForWorkUpload
                                        label.fw.radio-inline(style="font-size:18px;")
                                            input.radio-button(type='radio', style="margin-bottom:3rem", name='rating' value="allAges" checked=maxRatingAllowed === "SFW")
                                            | Safe For Work
                                        br
                                        br

                                    if maxRatingAllowed === "NSFW" || maxRatingAllowed === "SENSITIVE"
                                        label.fw.radio-inline(style="font-size:18px;")
                                            input.radio-button(type='radio', name='rating' value="mature")
                                            | Not Safe For Work
                                        br
                                        br

                                    if maxRatingAllowed === "SENSITIVE"
                                        label.fw.radio-inline(style="font-size:18px;")
                                            input.radio-button(type='radio', name='rating' value="sensitive" required)
                                            | Sensitive (Shocking content) 18+

                                        br
                                        br


                                    if maxRatingAllowed === "SFW"
                                        div.fw(style="width:400px;max-width:95%;margin:auto;") The instance host has chosen to make this instance Safe For Work only, please ensure that your upload is Safe For Work

                            br
                            label.fw(for="description" style="font-size:23px") Description
                            br
                            textarea.fw.form-group(style="width:400px;max-width:95%;border-radius:4px;font-size:16px;" type="text" name="description" id="description" maxlength='2000' rows="10" cols="70")

                        button.fw.btn.btn-primary.submit-button(style="border-radius:5px;font-size:18px;" type="submit") Upload

                div.upload-gif
                    h3.fw.upload-title-name Your file is uploading
                    br
                    h1.fw(style="margin-bottom:19px;") Uploading...

                    div#myItem1.ldBar(data-preset="circle")

                    p.fw(id="uploadTimeElapsed", style="margin-top:77px;") Time elapsed: calculating ...

                    p.fw(id="estimatedUploadTimeLeft") Estimated time to completion: calculating ...

                    p.fw(id="estimatedTotalUploadTime") Total estimated upload time: calculating ...







    script(src='/js/lib/jquery-3.1.1.min.js')
    script(src='/js/lib/resumable.js')
    script.
      $(document).ready(function () {

        // progress bar stuff
        var bar1 = new ldBar("#myItem1");

        var selectedCategory;
        var selectedSubcategory;

        // hide uploading gif
        $(".upload-gif").hide();

        // when a new category is selected
        $('.categoryValue').click(function(){
          var value = $(this).data("value");

          var displayName = $(this).data("displayname");

          // hide all subcategories
          $('.subcategories').hide();

          selectedCategory = value;

          // display selected category
          $('.categoryDisplayName').text('Category: ' + displayName)

          // show subcategories if they exist
          $('.categoryName').show();
          $('.' + value).show();




          console.log(value, displayName);
        })

        var privs = #{user.privs}

        var maxSize;

        if(privs){
          maxSize = '#{user.privs.uploadSize}' || 500;
        } else {
          maxSize = 500;

        }

        var maxSizeInBytes = maxSize * 1000000

        console.log(maxSizeInBytes)

        // set chunk size to 25MB
        var chunkSize = 1000 * 1000 * 25;

        // on submit, build a resumable, and then fire it off

        var r = new Resumable({
          target: '#{uploadUrl}',
          chunkSize: chunkSize,
          simultaneousUploads: 1,
          testChunks: false,
          throttleProgressCallbacks: 1,
          maxFiles: 1,
          maxFileSize: maxSizeInBytes,
          maxFileSizeErrorCallback: function (file, errorCount) {
            swal(`Please upload a file smaller than ${maxSize} MB`);
            // console.log(file);
          }

        });

        // Resumable.js isn't supported, fall back on a different method
        if (!r.support) {
          swal('Sorry, your browser isn\'t supported currently, please update your browser');
        } else {
          var setProgressAndTimeRemaining = null;
          var barProgress = null;
          var estimatedUploadTimeLeft = null;
          var secondsElapsed = null;

          r.assignBrowse($('.resumable-browse')[0]);

          r.assignDrop(document.getElementById('dropTarget'));

          // Handle file add event

          r.on('fileAdded', function (file) {

            // scroll to the div when file selected
            document.getElementById('scrollTo').scrollIntoView({ behavior: 'smooth' });


            // replace underlines with spaces just to be nice
            var fileName = file.fileName.replace(/_/g, " ");

            fileName = fileName.substring(0, fileName.lastIndexOf('.'));

            var title = $('#title').val();

            console.log(title);

            if(!title || title == ""){
              $('#title').val(fileName);
            }

            // auto fill in title

            // console.log(file);

          });

          $('.submit-button').on('click', function (e) {

            var title = $('#title').val();
            var description = $('#description').val();

            var visibility = $('input[name=visibility]:checked').val();
            var rating = $(".rating label input[type='radio']:checked").val();

            var subcategory = $(".subcategory label input[type='radio']:checked").val();

            if(!rating){
              return swal('Please select a rating')
            }

            if(!visibility){
              visibility = 'public'
            }

            $('.upload-title-name').text('File: ' + title);

            if (r.files.length == 0) {
              swal('Please select a file')
              return
            }

            if (title == '') {
              swal('Please enter a title')
              return
            }

            //  HIDE FORM SHOW GIF
            $(".upload-form").hide();

            $('.upload-information').hide();

            $(".upload-gif").show();



            var uploadToken = '#{user.uploadToken}'

            r.opts.query = {
              title,
              description,
              uploadToken,
              visibility,
              rating,
              category: selectedCategory,
              subcategory
            };

            r.upload();

            $('.file-progress').html('BEGINNING UPLOAD...');
          });


          r.on('fileSuccess', function (file, response) {

            console.log('message:')
            console.log(response);

            response = JSON.parse(response);

            if(response.message == 'ALREADY-UPLOADED'){
              //  HIDE FORM SHOW GIF
              $(".upload-form").show();
              $(".upload-gif").hide();


              $('.upload-information').show();


              // auto fill in title
              $('#title').val('');
              return swal({ title: 'File Already Uploaded', text: 'Sorry, this file has already been uploaded, please try another'}, function(){
                window.location.href = '/upload'
              })
            }

            if (response.url) {
              window.location.href = response.url;
            }


            // Reflect that the file upload has completed
            $('.file-progress').html('UPLOAD COMPLETED');
          });


          r.on('fileError', function (file, response) {

            response = JSON.parse(response);

            console.log(response.message);

            console.log('file error');

            if (response.message == 'UNKNOWN-FILETYPE') {
              //  HIDE FORM SHOW GIF
              $(".upload-form").show();
              $(".upload-gif").hide();
              $('.upload-information').show();


              // auto fill in title
              $('#title').val('');
              return swal({
                title: 'File Type Not Supported',
                text: 'Sorry, this file type is not supported, please try another file'
              }, function () {
                window.location.href = '/upload'
              })
            }

            if (response.message == 'ALREADY-UPLOADED') {
              //  HIDE FORM SHOW GIF
              $(".upload-form").show();
              $(".upload-gif").hide();
              $('.upload-information').show();


              // auto fill in title
              $('#title').val('');
              return swal({
                title: 'File Already Uploaded',
                text: 'Sorry, this file has already been uploaded, please try another'
              }, function () {
                window.location.href = '/upload'
              })
            }

            if (response.message == 'UPLOADS_OFF') {
              //  HIDE FORM SHOW GIF
              $(".upload-form").show();
              $(".upload-gif").hide();

              // auto fill in title
              $('#title').val('');
              return swal({
                title: 'Uploads Temporarily Off',
                text: 'Sorry uploads are temporarily turned off (only app moderator is offline)'
              }, function () {
                window.location.href = '/upload'
              })
            }

            // Reflect that the file upload has resulted in error
            $('.file-progress').html('File could not be uploaded: (' + response.message + ')');
          });
          r.on('fileProgress', function (file, response) {

            const progress = Math.floor(file.progress() * 100);

            if (progress === 0 || progress === '0') {
              uploadStartTime = new Date()
              $('.file-progress').html('BEGINNING UPLOAD...');
            } else {
              secondsElapsed = Math.round((new Date() - uploadStartTime) / 1000)
              const progressSpeed = (file.progress() * 100) / secondsElapsed

              estimatedUploadSecondsLeft = Math.ceil((100 - (file.progress() * 100)) / progressSpeed)

              barProgress = progress
            }
          });

          setInterval(function() {
            if (barProgress) {
              $('.file-progress').html('PROGRESS: ' + barProgress + '%');

              bar1.set(barProgress);

              var secondsToFormattedTime = #{secondsToFormattedTime}
              estimatedUploadSecondsLeft = estimatedUploadSecondsLeft > 0 ? estimatedUploadSecondsLeft - 1 : 0
              secondsElapsed += 1

              var formattedElapsedTime = secondsElapsed && secondsToFormattedTime(secondsElapsed)
              var formattedTimeLeft = estimatedUploadSecondsLeft !== null && secondsToFormattedTime(estimatedUploadSecondsLeft)
              var formattedTotalEstimatedProcessingTime = estimatedUploadSecondsLeft !== null && secondsToFormattedTime(estimatedUploadSecondsLeft + secondsElapsed)

              $('#uploadTimeElapsed').text(`Time elapsed: ${formattedElapsedTime ? formattedElapsedTime : "calculating ..."}`)

              $('#estimatedUploadTimeLeft').text(`Estimated time to completion: ${formattedTimeLeft ? formattedTimeLeft : "calculating ..." }`);
            }

            $('#estimatedTotalUploadTime').text(`Total estimated upload time: ${formattedTotalEstimatedProcessingTime ? formattedTotalEstimatedProcessingTime : "calculating ..."}`)

          }, 1000 * 1)
        }
      });